plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs'
    id 'kotlin-kapt'
    id 'com.google.android.gms.oss-licenses-plugin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 31
    buildToolsVersion '31.0.0'

    defaultConfig {
        applicationId "com.comanch.valley_wind_awake"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.comanch.valley_wind_awake.CustomTestRunner"
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguardTest-rules.pro'
        }
        ValleyWindAwake {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguardTest-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$ktxVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_v4_version"

    // hilt
    implementation("com.google.dagger:hilt-android:2.40")
    kapt("com.google.dagger:hilt-android-compiler:2.40")

    // Hilt testing
    androidTestImplementation "com.google.dagger:hilt-android-testing:2.40"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:2.40"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Preference
    implementation "androidx.preference:preference-ktx:$preference_version"

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // recycle view
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.recyclerview:recyclerview-selection:$recyclerview_selection_version"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_android_version"

    // Layouts
    implementation "androidx.gridlayout:gridlayout:$gridLayoutVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // fragment
    implementation("androidx.fragment:fragment-ktx:$fragment_version")
    debugImplementation("androidx.fragment:fragment-testing:$fragment_version")

    // activity
    implementation("androidx.activity:activity-ktx:$activity_version")

    //license
    implementation("com.google.android.gms:play-services-oss-licenses:$license_version")

    // test
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "androidx.arch.core:core-testing:$archCoreVersion"
    testImplementation "androidx.test.ext:junit:$extJunitVersion"
    testImplementation "androidx.test:runner:$testRunnerVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_android_version"

    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.4.0"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:core-ktx:$coreKtxVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archCoreVersion"
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
    androidTestImplementation "androidx.test.ext:junit:$extJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_android_version"

}

kapt {
    correctErrorTypes = true
}



